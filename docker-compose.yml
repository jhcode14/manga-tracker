services:
  db:
    image: postgres:14
    container_name: mt_postgres_container
    volumes:
      # - postgres_data:/var/lib/postgresql/data
      - ./config/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - 5432:5432
    networks:
      - shared-network
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydatabase
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "user", "-d", "mydatabase"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    
  selenium-chrome:
    image: seleniarm/standalone-chromium:latest
    container_name: mt_selenium_chrome
    ports:
      - "4444:4444"
    networks:
      - shared-network
    environment:
      SE_NODE_MAX_SESSIONS: 4
      SE_NODE_SESSION_TIMEOUT: 300
    shm_size: '2g'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4444/wd/hub/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  backend:
    image: manga-tracker-backend:latest
    container_name: mt_flask_backend
    volumes:
      - shared-images:/usr/src/app/data/images
    command: flask --debug run
    ports:
      - "5001:5000"
    networks:
      - shared-network
    environment:
      FLASK_ENV: development
      VOLUME_PATH: data/images
    depends_on:
      selenium-chrome:
        condition: service_healthy
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
  
  scheduler:
    image: manga-tracker-scheduler:latest
    container_name: mt_scheduler
    volumes:
      - shared-images:/usr/src/app/data/images
    networks:
      - shared-network
    environment:
      VOLUME_PATH: data/images
    command: python scheduled_task.py
    depends_on:
      selenium-chrome:
        condition: service_healthy
      db:
        condition: service_healthy
  
  frontend:
    image: manga-tracker-frontend:latest
    container_name: mt_vite_frontend
    ports:
      - "5173:5173"
    networks:
      - shared-network
    volumes:
      - shared-images:/usr/src/app/public/images:ro # Read-only
    environment:
      VITE_VOLUME_PATH: public/images
      BACKEND_API_URL: http://mt_flask_backend:5000
      EXPRESS_SERVER_PORT: 3000
    command: pnpm run dev
    depends_on:
      backend:
        condition: service_healthy
volumes:
  #postgres_data:
  shared-images:

networks:
  shared-network:
    driver: bridge # Shared network with internet access